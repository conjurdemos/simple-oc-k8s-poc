#!/bin/bash
set -eo pipefail

source ../config/dap.config
source ../config/utils.sh

login_as $DEVELOPER_USERNAME $DEVELOPER_PASSWORD

if ! [ "${DOCKER_EMAIL}" = "" ]; then
  echo "Deleting image pull secret."
  $CLI delete --ignore-not-found secret dockerpullsecret -n $TEST_APP_NAMESPACE_NAME
fi

echo "Deleting instantiated policies & manifests..."
rm -f manifests/*.yml policy/*.yml

if [[ ${TEST_APP_NAMESPACE_NAME} != ${CONJUR_NAMESPACE_NAME} ]]; then
  echo "Deleting config map..."
  $CLI delete --ignore-not-found cm $CONJUR_CONFIG_MAP -n $TEST_APP_NAMESPACE_NAME
fi

echo "Deleting test app/sidecar deployment."
$CLI delete --ignore-not-found \
  deployment/test-app-summon-sidecar \
  service/test-app-summon-sidecar \
  serviceaccount/test-app-summon-sidecar \
  -n $TEST_APP_NAMESPACE_NAME

echo "Deleting test app/init container deployment."
$CLI delete --ignore-not-found \
  deployment/test-app-summon-init \
  service/test-app-summon-init \
  serviceaccount/test-app-summon-init \
  -n $TEST_APP_NAMESPACE_NAME

echo "Deleting test app/secrets injection deployment."
$CLI delete --ignore-not-found \
  deployment/test-app-secrets-injection \
  service/test-app-secrets-injection \
  secret/db-credentials \
  -n $TEST_APP_NAMESPACE_NAME

rm -f manifests/*.yaml manifests/*.yml

echo "Waiting for pods to terminate"
until [[ "$($CLI get pods -n $TEST_APP_NAMESPACE_NAME 2>&1 | grep test-app-summon)" == "" ]]; do
  sleep 4
  echo -n '.'
done
echo

echo "Test apps deleted."
