apiVersion: v1
kind: Service
metadata:
  name: test-app-summon-init
  labels:
    app: test-app-summon-init
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: test-app-summon-init
  type: LoadBalancer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-app-summon-init
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: test-app-summon-init
  name: test-app-summon-init
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app-summon-init
  template:
    metadata:
      labels:
        app: test-app-summon-init
    spec:
      serviceAccountName: test-app-summon-init
      hostAliases:
      - ip: "192.168.99.100"
        hostnames:
        - "conjur-master-vbx"
      containers:
      - image: 172.30.1.1:5000/test-apps/test-app:test-apps
        imagePullPolicy: IfNotPresent
        name: test-app
        ports:
        - containerPort: 8080
        env:

        # values from DAP config map
          - name: CONJUR_VERSION
            valueFrom:
              configMapKeyRef:
                name: conjur-config
                key: conjur-version
          - name: CONJUR_ACCOUNT
            valueFrom:
              configMapKeyRef:
                name: conjur-config
                key: conjur-account
          - name: CONJUR_APPLIANCE_URL
            valueFrom:
              configMapKeyRef:
                name: conjur-config
                key: conjur-follower-url
          - name: CONJUR_SSL_CERTIFICATE
            valueFrom:
              configMapKeyRef:
                name: conjur-config
                key: follower-certificate
          - name: CONJUR_AUTHN_TOKEN_FILE
            valueFrom:
              configMapKeyRef:
                name: conjur-config
                key: conjur-authn-token-file
        volumeMounts:
          - mountPath: /run/conjur
            name: conjur-access-token
            readOnly: true
      initContainers:
      - image: 172.30.1.1:5000/test-apps/conjur-authn-k8s-client:test-apps
        imagePullPolicy: IfNotPresent
        name: authenticator
        env:
        # hardcoded values
          - name: CONTAINER_MODE
            value: init

        # values from pod metadata
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP

        # values from DAP config map
          - name: CONJUR_VERSION
            valueFrom:
              configMapKeyRef:
                name: conjur-config
                key: conjur-version
          - name: CONJUR_ACCOUNT
            valueFrom:
              configMapKeyRef:
                name: conjur-config
                key: conjur-account
          - name: CONJUR_APPLIANCE_URL
            valueFrom:
              configMapKeyRef:
                name: conjur-config
                key: conjur-follower-url
          - name: CONJUR_SSL_CERTIFICATE
            valueFrom:
              configMapKeyRef:
                name: conjur-config
                key: follower-certificate

        # values from app config map
          - name: CONJUR_AUTHN_URL
            valueFrom:
              configMapKeyRef:
                name: test-apps-config
                key: conjur-authn-url
          - name: CONJUR_AUTHN_LOGIN
            valueFrom:
              configMapKeyRef:
                name: test-apps-config
                key: conjur-authn-login-init 
        volumeMounts:
          - mountPath: /run/conjur
            name: conjur-access-token
      imagePullSecrets:
        - name: dockerpullsecret
      volumes:
        - name: conjur-access-token
          emptyDir:
            medium: Memory
